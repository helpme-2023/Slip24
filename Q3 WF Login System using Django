 Implement Login System using Django

Implementing a login system in Django involves creating views, templates, and handling user authentication. Here's a step-by-step guide to creating a simple login system:

Create a new Django app for authentication:

python manage.py startapp accounts
=================================================================================
Define models for the authentication app:

Edit the accounts/models.py file:

# accounts/models.py
from django.db import models
from django.contrib.auth.models import AbstractUser

class CustomUser(AbstractUser):
    # Add any additional fields you need pass
=============================================================================
Update settings.py to use your custom user model:

Add the following to your settings.py file:

# myblogproject/settings.py
AUTH_USER_MODEL = 'accounts.CustomUser'
==========================================================================
Run migrations to create the database table for the custom user model:

python manage.py makemigrations
python manage.py migrate
===========================================================================
Create forms for authentication:
Edit the accounts/forms.py file:

# accounts/forms.py
from django import forms
from django.contrib.auth.forms import AuthenticationForm

class CustomAuthenticationForm(AuthenticationForm):
    # You can add additional fields or validations if needed
    pass
======================================================================
Create views for authentication:

Edit the accounts/views.py file:

# accounts/views.py
from django.contrib.auth import authenticate, login
from django.shortcuts import render, redirect
from .forms import CustomAuthenticationForm

def login_view(request):
    if request.method == 'POST':
        form = CustomAuthenticationForm(request, request.POST)
        if form.is_valid():
            username = form.cleaned_data.get('username')
            password = form.cleaned_data.get('password')
            user = authenticate(request, username=username, password=password)
            if user:
                login(request, user)
                return redirect('home')  # Change 'home' to your desired redirect URL
    else:
        form = CustomAuthenticationForm()

    return render(request, 'accounts/login.html', {'form': form})
=============================================================================================
Create URL patterns for authentication:

Edit the accounts/urls.py file:

# accounts/urls.py
from django.urls import path
from .views import login_view

app_name = 'accounts'
urlpatterns = [
    path('login/', login_view, name='login'),
]
==========================================================================================
Include the authentication app URLs in the project's urls.py file:

Edit the myblogproject/urls.py file:

# myblogproject/urls.py
from django.contrib import admin
from django.urls import include, path

urlpatterns = [
    path('admin/', admin.site.urls),
    path('accounts/', include('accounts.urls')),
]
======================================================================================
Create templates for authentication:

Create a accounts/templates/accounts/login.html file:

html
Copy code
<!-- accounts/templates/accounts/login.html -->
{% extends 'base.html' %}

{% block content %}
  <h2>Login</h2>
  <form method="post" action="{% url 'accounts:login' %}">
    {% csrf_token %}
    {{ form.as_p }}
    <button type="submit">Login</button>
  </form>
{% endblock %}
============================================================================================
<!-- base.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}My Blog{% endblock %}</title>
</head>
<body>
    <header>
        <h1>{% block header %}My Blog{% endblock %}</h1>
        <nav>
            <ul>
                <li><a href="{% url 'home' %}">Home</a></li>
                <li><a href="{% url 'accounts:login' %}">Login</a></li>
                <!-- Add other navigation links as needed -->
            </ul>
        </nav>
    </header>

    <div id="content">
        {% block content %}{% endblock %}
    </div>

    <footer>
        <p>&copy; 2023 My Blog</p>
    </footer>
</body>
</html>
=============================================================================================================================
Run the development server:


python manage.py runserver
Visit http://127.0.0.1:8000/accounts/login/ to see the login page.
